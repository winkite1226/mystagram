# Generated by Django 4.1.2 on 2022-10-09 05:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tweet', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='post',
            name='post_author',
            field=models.ForeignKey(db_column='post_author', on_delete=django.db.models.deletion.CASCADE, related_name='post', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='like',
            name='post_liked_postid',
            field=models.ForeignKey(db_column='post_like_postid', on_delete=django.db.models.deletion.CASCADE, related_name='like', to='tweet.post'),
        ),
        migrations.AddField(
            model_name='like',
            name='post_liked_userid',
            field=models.ForeignKey(db_column='post_like_userid', on_delete=django.db.models.deletion.CASCADE, related_name='like', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='comment_author',
            field=models.ForeignKey(db_column='comment_author', on_delete=django.db.models.deletion.CASCADE, related_name='comment', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='comment_postid',
            field=models.ForeignKey(db_column='comment_postid', on_delete=django.db.models.deletion.CASCADE, related_name='comment', to='tweet.post'),
        ),
        migrations.AddField(
            model_name='bookmark',
            name='post_bookmark_author',
            field=models.ForeignKey(db_column='bookmark_author', on_delete=django.db.models.deletion.CASCADE, related_name='bookmark', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bookmark',
            name='post_bookmarkd_postid',
            field=models.ForeignKey(db_column='bookmark_postid', on_delete=django.db.models.deletion.CASCADE, related_name='bookmark', to='tweet.post'),
        ),
    ]
